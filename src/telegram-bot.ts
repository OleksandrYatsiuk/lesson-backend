import Telegraf from 'telegraf';
import { Markup, Extra } from 'telegraf';
import * as axios from 'axios';
const file = require('../data.json');
const bot = new Telegraf(process.env.BOT_TOKEN);
const link = 'https://lesson-frontend.herokuapp.com';
const apiUrl = 'https://lesson-backend.herokuapp.com/api/v1';

bot.telegram.deleteWebhook().then(success => {
    success && console.log('ü§ñ is listening to your commands');
    bot.startPolling();
})
bot.command('menu', ({reply})=>{
    return reply('Main menu', Markup
    .keyboard([
        ['üîç –ü—Ä–æ –Ω–∞—Å', 'üòé –ö—É—Ä—Å–∏'], // Row1 with 2 buttons
        ['‚ò∏ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏'], // Row2 with 2 buttons
        ['‚ò∏ –û–ø–ª–∞—Ç–∞'], // Row2 with 2 buttons
    ])
    .oneTime()
    .resize()
    .extra()
)
})
bot.start(( ctx) => {
    console.log(ctx.chat);
// axios.default.patch(apiUrl+'/users/current')
})
bot.hears('üîç –ü—Ä–æ –Ω–∞—Å', ctx => {
    ctx.reply(file.about);
})
bot.hears('‚ò∏ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏', ctx => {
    ctx.reply(file.result);
})
bot.hears('üòé –ö—É—Ä—Å–∏', ctx => {
    ctx.reply(file.price);
})
bot.hears('üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏', (ctx) => {
    ctx.replyWithMarkdown(`Open: [Contacts](${link})`);
})
bot.hears('‚ò∏ –û–ø–ª–∞—Ç–∞', ctx => {
    return ctx.reply('Practical Legal Courses ‚Äì —à–∫–æ–ª–∞ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É', Extra.HTML().markup((m) =>
        m.inlineKeyboard([
            m.urlButton('–û–ø–ª–∞—Ç–∏—Ç–∏', `${link}/payment?chat_id=${ctx.chat.id}&courseId=1`),
        ])))
});